{"version":3,"sources":["App.jsx","index.jsx"],"names":["adoptedGoods","map","good","id","name","ALPHABETIC","LENGTH","App","useState","goods","setState","sortedByState","setsortedByState","isReversed","setIsReversed","sortBy","value","modifiedGoods","sort","good1","good2","localeCompare","length","className","type","cn","onClick","reverse","style","display","ReactDOM","render","document","getElementById"],"mappings":"iPAkBMA,EAbyB,CAC7B,YACA,SACA,OACA,YACA,QACA,QACA,OACA,QACA,MACA,UAGmCC,KAAI,SAACC,EAAMC,GAAP,MAAe,CAAEC,KAAMF,EAAMC,SAChEE,EAAa,aACbC,EAAS,SAEFC,EAAM,WACjB,MAA0BC,mBAASR,GAAnC,mBAAOS,EAAP,KAAcC,EAAd,KACA,EAA0CF,mBAAS,MAAnD,mBAAOG,EAAP,KAAsBC,EAAtB,KACA,EAAoCJ,oBAAS,GAA7C,mBAAOK,EAAP,KAAmBC,EAAnB,KAEMC,EAAS,SAACC,GACd,IAAMC,EAAa,YAAOR,GAE1B,GAAIO,IAAUX,EAMZ,OALAY,EAAcC,MAAK,SAACC,EAAOC,GAAR,OACjBD,EAAMf,KAAKiB,cAAcD,EAAMhB,SACjCQ,EAAiBP,QACjBK,EAASO,GAKPD,IAAUV,IACZW,EAAcC,MAAK,SAACC,EAAOC,GAAR,OACjBD,EAAMf,KAAKkB,OAASF,EAAMhB,KAAKkB,UACjCV,EAAiBN,GACjBI,EAASO,KAoBb,OACE,sBAAKM,UAAU,kBAAf,UACE,sBAAKA,UAAU,UAAf,UACE,wBACEC,KAAK,SACLD,UAAWE,IAAG,CAAC,SAAU,WAAY,CACnC,WAAYd,IAAkBN,IAEhCqB,QAAS,kBAAMX,EAAOV,IALxB,iCAUA,wBACEmB,KAAK,SACLD,UAAWE,IAAG,CAAC,SAAU,cAAe,CACtC,WAAYd,IAAkBL,IAEhCoB,QAAS,kBAAMX,EAAOT,IALxB,4BAUA,wBACEkB,KAAK,SACLD,UAAWE,IAAG,CAAC,SAAU,cAAe,CACtC,YAA2B,IAAfZ,IAEda,QA5Ca,WAEjBZ,GADED,GAMJH,EAAS,YAAID,GAAOkB,YAgChB,qBAUA,wBACEH,KAAK,SACLD,UAAU,4BACVK,MAAO,CAAEC,QAAShB,GAAcF,EAC5B,eAAiB,QACrBe,QA5CW,WACjBd,EAAiB,MACjBE,GAAc,GACdJ,EAASV,IAoCL,sBAWF,6BACGS,EAAMR,KAAI,SAAAC,GAAI,OACb,oBAAkB,UAAQ,OAA1B,SAAkCA,EAAKE,MAA9BF,EAAKC,aC1GxB2B,IAASC,OACP,cAAC,EAAD,IACAC,SAASC,eAAe,W","file":"static/js/main.1cc74dc0.chunk.js","sourcesContent":["import 'bulma/css/bulma.css';\nimport './App.scss';\nimport cn from 'classnames';\nimport { useState } from 'react';\n\nexport const goodsFromServer = [\n  'Dumplings',\n  'Carrot',\n  'Eggs',\n  'Ice cream',\n  'Apple',\n  'Bread',\n  'Fish',\n  'Honey',\n  'Jam',\n  'Garlic',\n];\n\nconst adoptedGoods = goodsFromServer.map((good, id) => ({ name: good, id }));\nconst ALPHABETIC = 'ALPHABETIC';\nconst LENGTH = 'LENGTH';\n\nexport const App = () => {\n  const [goods, setState] = useState(adoptedGoods);\n  const [sortedByState, setsortedByState] = useState(null);\n  const [isReversed, setIsReversed] = useState(false);\n\n  const sortBy = (value) => {\n    const modifiedGoods = [...goods];\n\n    if (value === ALPHABETIC) {\n      modifiedGoods.sort((good1, good2) => (\n        good1.name.localeCompare(good2.name)));\n      setsortedByState(ALPHABETIC);\n      setState(modifiedGoods);\n\n      return;\n    }\n\n    if (value === LENGTH) {\n      modifiedGoods.sort((good1, good2) => (\n        good1.name.length - good2.name.length));\n      setsortedByState(LENGTH);\n      setState(modifiedGoods);\n    }\n  };\n\n  const reverseGoods = () => {\n    if (isReversed) {\n      setIsReversed(false);\n    } else {\n      setIsReversed(true);\n    }\n\n    setState([...goods].reverse());\n  };\n\n  const resetGoods = () => {\n    setsortedByState(null);\n    setIsReversed(false);\n    setState(adoptedGoods);\n  };\n\n  return (\n    <div className=\"section content\">\n      <div className=\"buttons\">\n        <button\n          type=\"button\"\n          className={cn(['button', 'is-info'], {\n            'is-light': sortedByState !== ALPHABETIC,\n          })}\n          onClick={() => sortBy(ALPHABETIC)}\n        >\n          Sort alphabetically\n        </button>\n\n        <button\n          type=\"button\"\n          className={cn(['button', 'is-success'], {\n            'is-light': sortedByState !== LENGTH,\n          })}\n          onClick={() => sortBy(LENGTH)}\n        >\n          Sort by length\n        </button>\n\n        <button\n          type=\"button\"\n          className={cn(['button', 'is-warning'], {\n            'is-light': isReversed === false,\n          })}\n          onClick={reverseGoods}\n        >\n          Reverse\n        </button>\n\n        <button\n          type=\"button\"\n          className=\"button is-danger is-light\"\n          style={{ display: isReversed || sortedByState\n            ? 'inline-block' : 'none' }}\n          onClick={resetGoods}\n        >\n          Reset\n        </button>\n      </div>\n\n      <ul>\n        {goods.map(good => (\n          <li key={good.id} data-cy=\"Good\">{good.name}</li>\n        ))}\n      </ul>\n    </div>\n  );\n};\n","import ReactDOM from 'react-dom';\nimport { App } from './App';\n\nReactDOM.render(\n  <App />,\n  document.getElementById('root'),\n);\n"],"sourceRoot":""}